// Generated from ./antlr/grammars/TiB by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,25,154,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,1,0,1,0,1,0,
1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,4,
1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,
1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,16,1,17,1,
17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,22,5,22,119,8,22,
10,22,12,22,122,9,22,3,22,124,8,22,1,23,1,23,1,23,1,23,5,23,130,8,23,10,
23,12,23,133,9,23,1,23,1,23,1,24,1,24,1,24,1,24,5,24,141,8,24,10,24,12,24,
144,9,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,142,0,26,1,1,3,2,
5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
33,17,35,18,37,19,39,20,41,21,43,22,45,0,47,23,49,24,51,25,1,0,5,1,0,65,
90,1,0,48,57,1,0,49,57,2,0,10,10,13,13,3,0,9,10,13,13,32,32,156,0,1,1,0,
0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,
0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,
25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,
0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,47,1,0,0,0,0,49,
1,0,0,0,0,51,1,0,0,0,1,53,1,0,0,0,3,58,1,0,0,0,5,64,1,0,0,0,7,67,1,0,0,0,
9,70,1,0,0,0,11,75,1,0,0,0,13,79,1,0,0,0,15,84,1,0,0,0,17,86,1,0,0,0,19,
88,1,0,0,0,21,90,1,0,0,0,23,92,1,0,0,0,25,94,1,0,0,0,27,96,1,0,0,0,29,98,
1,0,0,0,31,100,1,0,0,0,33,102,1,0,0,0,35,105,1,0,0,0,37,107,1,0,0,0,39,109,
1,0,0,0,41,111,1,0,0,0,43,113,1,0,0,0,45,123,1,0,0,0,47,125,1,0,0,0,49,136,
1,0,0,0,51,150,1,0,0,0,53,54,5,68,0,0,54,55,5,73,0,0,55,56,5,83,0,0,56,57,
5,80,0,0,57,2,1,0,0,0,58,59,5,73,0,0,59,60,5,78,0,0,60,61,5,80,0,0,61,62,
5,85,0,0,62,63,5,84,0,0,63,4,1,0,0,0,64,65,5,45,0,0,65,66,5,62,0,0,66,6,
1,0,0,0,67,68,5,73,0,0,68,69,5,70,0,0,69,8,1,0,0,0,70,71,5,84,0,0,71,72,
5,72,0,0,72,73,5,69,0,0,73,74,5,78,0,0,74,10,1,0,0,0,75,76,5,69,0,0,76,77,
5,78,0,0,77,78,5,68,0,0,78,12,1,0,0,0,79,80,5,76,0,0,80,81,5,73,0,0,81,82,
5,83,0,0,82,83,5,84,0,0,83,14,1,0,0,0,84,85,5,32,0,0,85,16,1,0,0,0,86,87,
5,34,0,0,87,18,1,0,0,0,88,89,5,58,0,0,89,20,1,0,0,0,90,91,5,59,0,0,91,22,
1,0,0,0,92,93,5,44,0,0,93,24,1,0,0,0,94,95,5,46,0,0,95,26,1,0,0,0,96,97,
5,40,0,0,97,28,1,0,0,0,98,99,5,41,0,0,99,30,1,0,0,0,100,101,5,61,0,0,101,
32,1,0,0,0,102,103,5,112,0,0,103,104,5,105,0,0,104,34,1,0,0,0,105,106,5,
101,0,0,106,36,1,0,0,0,107,108,5,105,0,0,108,38,1,0,0,0,109,110,5,10,0,0,
110,40,1,0,0,0,111,112,7,0,0,0,112,42,1,0,0,0,113,114,7,1,0,0,114,44,1,0,
0,0,115,124,5,48,0,0,116,120,7,2,0,0,117,119,7,1,0,0,118,117,1,0,0,0,119,
122,1,0,0,0,120,118,1,0,0,0,120,121,1,0,0,0,121,124,1,0,0,0,122,120,1,0,
0,0,123,115,1,0,0,0,123,116,1,0,0,0,124,46,1,0,0,0,125,126,5,47,0,0,126,
127,5,47,0,0,127,131,1,0,0,0,128,130,8,3,0,0,129,128,1,0,0,0,130,133,1,0,
0,0,131,129,1,0,0,0,131,132,1,0,0,0,132,134,1,0,0,0,133,131,1,0,0,0,134,
135,6,23,0,0,135,48,1,0,0,0,136,137,5,47,0,0,137,138,5,42,0,0,138,142,1,
0,0,0,139,141,9,0,0,0,140,139,1,0,0,0,141,144,1,0,0,0,142,143,1,0,0,0,142,
140,1,0,0,0,143,145,1,0,0,0,144,142,1,0,0,0,145,146,5,42,0,0,146,147,5,47,
0,0,147,148,1,0,0,0,148,149,6,24,0,0,149,50,1,0,0,0,150,151,7,4,0,0,151,
152,1,0,0,0,152,153,6,25,0,0,153,52,1,0,0,0,5,0,120,123,131,142,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class TiBLexer extends antlr4.Lexer {

    static grammarFileName = "TiB";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'DISP'", "'INPUT'", "'->'", "'IF'", "'THEN'", 
                         "'END'", "'LIST'", "' '", "'\"'", "':'", "';'", 
                         "','", "'.'", "'('", "')'", "'='", "'pi'", "'e'", 
                         "'i'", "'\\n'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, "LETTER", "NUMBER", 
                          "LINECOMMENT", "BLOCKCOMMENT", "WHITESPACE" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "LETTER", "NUMBER", "INT", "LINECOMMENT", 
                      "BLOCKCOMMENT", "WHITESPACE" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

TiBLexer.EOF = antlr4.Token.EOF;
TiBLexer.T__0 = 1;
TiBLexer.T__1 = 2;
TiBLexer.T__2 = 3;
TiBLexer.T__3 = 4;
TiBLexer.T__4 = 5;
TiBLexer.T__5 = 6;
TiBLexer.T__6 = 7;
TiBLexer.T__7 = 8;
TiBLexer.T__8 = 9;
TiBLexer.T__9 = 10;
TiBLexer.T__10 = 11;
TiBLexer.T__11 = 12;
TiBLexer.T__12 = 13;
TiBLexer.T__13 = 14;
TiBLexer.T__14 = 15;
TiBLexer.T__15 = 16;
TiBLexer.T__16 = 17;
TiBLexer.T__17 = 18;
TiBLexer.T__18 = 19;
TiBLexer.T__19 = 20;
TiBLexer.LETTER = 21;
TiBLexer.NUMBER = 22;
TiBLexer.LINECOMMENT = 23;
TiBLexer.BLOCKCOMMENT = 24;
TiBLexer.WHITESPACE = 25;



